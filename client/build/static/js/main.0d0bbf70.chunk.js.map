{"version":3,"sources":["components/AllPets.js","components/PetForm.js","components/PetDetails.js","components/EditForm.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","props","useState","allPets","setAllPets","deleteToggle","useEffect","axios","get","then","response","console","log","data","pets","sort","a","b","type","localeCompare","catch","err","formSubmitted","map","pet","i","name","to","_id","className","PetForm","history","useHistory","description","skills","formInfo","setFormInfo","skill1","skill2","skill3","formErrors","setFormErrors","ChangeHandler","e","target","value","onSubmit","preventDefault","post","error","errors","setFormSubmitted","push","id","htmlFor","onChange","message","PetDetails","useParams","petInfo","setPetInfo","onClick","delete","EditForm","title","price","changeHandler","put","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0bbf70.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\n\nimport {Link} from \"react-router-dom\"\n    \nconst AllPets = (props) => {\n  \n\n    const [allPets, setAllPets] = useState([])\n\n    const [deleteToggle, setDeleteToggle] = useState(false)\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pets\")\n        .then(response => {\n            console.log(\"response when getting all Pets--->\", response)\n            setAllPets(response.data.pets.sort((a,b) => a.type.localeCompare(b.type)))\n        })\n        .catch(err => console.log(\"error while retrieving all products--->\", err))\n    },[props.formSubmitted, deleteToggle])\n   \n        const deletePet = (id) => {\n            axios.delete(`http://localhost:8000/api/products/delete/${id}`)\n            .then(response => {\n                console.log(\"Just deleted the Pet!\", response)\n                setDeleteToggle(!deleteToggle)\n            })\n            .catch(err => console.log(err))\n        }\n\n    return (\n        <table>\n        <thead>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Actions</th>\n        </thead>\n        <tbody>\n            {\n                allPets.map((pet, i) =>{\n                    return(\n                        <tr key = {i}>\n                            <td>{pet.name}</td>\n                            <td>{pet.type}</td>\n                            <td>\n                                <Link to={`/pet/${pet._id}`} className=\"btn btn-info\" > DETAILS</Link> |\n                                 <Link to={`/edit/${pet._id}`}className=\"btn btn-warning\">EDIT</Link> \n                            </td>\n                        </tr>\n                    )\n                })\n            }\n        </tbody>\n    </table>\n\n\n\n\n\n\n\n\n\n        // <div>\n        //     <h1> Here are all the Pets! </h1>\n        //     {allPets &&\n        //         allPets.map((pet, i) => {\n        //             return(\n                        \n        //                 <div key = {i} className=\"card\">\n        //                 <div className=\"card-body\">\n        //                     <h5 className=\"card-title\"> <Link to = {`/pet/${pet._id}`}>{pet.name}</Link></h5>\n        //                     <p className=\"card-text\"> {pet.type} </p>\n        //                     <p className=\"card-text\"> {pet.description} </p>\n        //                     <p className=\"card-text\"> {pet.skills} </p>\n        //                     <Link to= {`/pet/${pet._id}`} className=\"btn btn-primary\">View {pet.name} Details</Link>\n        //                     <button onClick={ (e) => deletePet(pet._id)} className=\"btn btn-danger\"> Delete {pet.name} </button>|<Link to = {`/edit/${pet._id}`} className=\"btn btn-secondary\"> Edit</Link>\n        //                 </div>\n        //                 </div>\n        //             )\n        //         })\n        //     }\n        // </div>\n    )\n}\n    \nexport default AllPets;\n\n","import React, {useState} from 'react';\nimport axios from \"axios\"\n\nimport { useHistory } from 'react-router';\n\n\nconst PetForm = (props) => {\n    const history = useHistory()\n    const [formInfo, setFormInfo] = useState({\n        name:\"\",\n        type:\"\",\n        description:\"\",\n        skills: [\"\"]\n    })\n\n    // Display error messages\n    const [formErrors, setFormErrors] = useState({\n        name:\"\",\n        type:\"\",\n        description:\"\",\n        skill1: [\"\"],\n        skill2: [\"\"],\n        skill3: [\"\"]\n    })\n\n    // ChangeHandler to update the formInfo object with the information from the form as the form is being changed\n\n    const ChangeHandler = (e)=>{\n        console.log(\"changing form here!!\")\n        setFormInfo({\n            ...formInfo, // hold on to entered info/ prevents rerendering with different info untill submited\n            [e.target.name]: e.target.value\n\n            \n        })\n    }\n\n\n    //submitHandler for whent the form submit we send this info to the backend using the routes to create something new\n     \n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.post(\"http://localhost:8000/api/pets/new\", formInfo)\n        .then(response => {\n            console.log(response)\n\n            if(response.data.error){\n                setFormErrors(response.data.error.errors)\n            }else{\n                props.setFormSubmitted(!props.formSubmitted)\n\n                //set the form back to empty after it is submitted\n                setFormInfo({\n                    name:\"\",\n                    type:\"\",\n                    description:\"\",\n                    skill1: [\"\"],\n                    skill2: [\"\"],\n                    skill3: [\"\"]\n                        \n                    })\n\n                setFormErrors({\n                    name:\"\",\n                    type:\"\",\n                    description:\"\",\n                    skills: [\"\"]\n                 })\n                \n                 // to redirect back to home after creating new pet\n                    history.push(\"/\")\n                    \n                }\n        })\n        .catch(error =>console.log(\"couldn't post/create Pet\",error))\n    }\n\n    return (\n        <div>\n            <h1> Pet Shelter </h1>\n            <h4>Know a pet needing a home?</h4>\n            <form onSubmit={submitHandler} className=\"d-flex justify-content-start\">\n                <div id= \"left\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\"> Pet Name:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"name\" value ={formInfo.name} id=\"name\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.name?.message}</p>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"type\">Pet Type:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"type\" value ={formInfo.type} id=\"type\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.type?.message}</p>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Pet Description:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"description\" value ={formInfo.description} id=\"description\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.description?.message}</p>\n                    </div>\n                </div>\n                <div id=\"right\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"skill1\">Pet Skill 1:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"skill1\" value ={formInfo.skill1} id=\"skill1\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.skill1?.message}</p>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"skill2\">Pet Skill 2:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"skill2\" value ={formInfo.skill2} id=\"skill2\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.skill2?.message}</p>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"skill3\">Pet Skill 3:</label>\n                        <input onChange = {ChangeHandler} type=\"text\" name=\"skill3\" value ={formInfo.skill3} id=\"skill3\" className=\"form-control\" />\n                        <p className=\"text-danger\">{formErrors.skill3?.message}</p>\n                    </div>\n                </div>\n                <button className=\"btn btn-success mt-3\" type=\"submit\">Create A New Pet</button>\n            </form>\n        </div>\n    );\n};\n\n\n\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\nconst PetDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const [petInfo, setPetInfo] = useState({})\n\n    useEffect(() => {\n\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(response => {\n                console.log(\"response when getting one Pet\", response)\n                setPetInfo(response.data.pet)\n\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const deletePet = () => {\n        console.log(\"deleting Pet\")\n\n        axios.delete(`http://localhost:8000/api/pets/delete/${id}`)\n            .then(response => {\n                console.log(\"Just deleted the Pet!\", response)\n                history.push(\"/\") // use history to redirect. in this case back to to home or the localhost \n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <>\n        <h4>Details about: {petInfo.name}</h4>\n        <button className=\"btn btn-danger\" onClick={(e) => deletePet(id)}>Adopt  {petInfo.name}</button>\n        <Link to=\"/\" className=\"btn btn-danger\"> Home </Link>\n\n        <div>\n            <p> Pet Type: {petInfo.type} </p>\n            <p> Pet Description: {petInfo.description}</p>\n            <p> Pet Skill 1: {petInfo.skill1}</p>\n            <p> Pet Skill 2: {petInfo.skill2}</p>\n            <p> Pet Skill 3: {petInfo.skill3}</p>\n        </div>\n        </>\n    \n\n    );\n};\n\n\nexport default PetDetails;","import React, {useState, useEffect} from 'react';\nimport axios from \"axios\"\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router';\n\n\nconst EditForm = (props) => {\n\n    const history = useHistory()\n    const { id } = useParams();\n\n    const [formInfo, setFormInfo] = useState({\n        name:\"\",\n        type:\"\",\n        description:\"\",\n        skills: [\"\"]\n            \n    })\n    \n\n    // Display error messages\n    const [formErrors, setFormErrors] = useState({\n        title:\"\",\n        price:\"\",\n        description:\"\"\n    })\n    \n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n         .then( response => {\n             console.log(\"response when getting one Pet to update\", response)\n            setFormInfo(response.data.pet)\n            \n\n         })\n         .catch(err => console.log(err))\n        \n    }, []);\n\n\n    // ChangeHandler to update the formInfo object with the information from the form as the form is being changed\n\n    const changeHandler = (e)=>{\n        console.log(\"changing form here!!\")\n        setFormInfo({\n            ...formInfo, // hold on to entered info/ prevents rerendering with different info untill submited\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    //submitHandler for whent the form submit we send this info to the backend using the routes to create something new\n     \n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/pets/update/${id}`, formInfo)\n            .then( response => {\n                console.log(\"Updated product succesfully!\", response)\n                if (response.data.error) { //if the form is not filled out properly\n                    setFormErrors(response.data.error.errors)\n                } else {\n                    props.setFormSubmitted(!props.formSubmitted)\n\n                    setFormInfo({\n                        name: \"\"\n\n                    })\n                    //redirect to \"/\" after creating a ninja\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(\"Something went wrong while updating product\", err))\n       \n    }\n\n    return (\n        <div>\n            {\n                formInfo != null ?  // \n                    // <h3>Edit PetEditPets</h3>\n                    <form onSubmit={submitHandler}>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"name\">Pet Name:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"name\" id=\"\" value={formInfo.name} className=\"form-control\" />\n                            <p className=\"text-danger\">{formErrors.name?.message}</p>\n\n                        </div>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"\">Pet Type:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"type\" id=\"\" value={formInfo.type} className=\"form-control\" />\n                            <p className=\"text-danger\">{formErrors.type?.message}</p>\n\n                        </div>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"description\">Description:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"description\" id=\"\" value={formInfo.description} className=\"form-control\" />\n                            <p className=\"text-danger\">{formErrors.description?.message}</p>\n\n                        </div>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"skill1\">Skill 1:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"skill1\" id=\"\" value={formInfo.skill1} className=\"form-control\" />\n                            \n\n                        </div>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"skill2\">Skill 2:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"skill2\" id=\"\" value={formInfo.skill2} className=\"form-control\" />\n                            \n\n                        </div>\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"skill3\">Skill 3:</label>\n                            <input onChange={changeHandler} type=\"text\" name=\"skill3\" id=\"\" value={formInfo.skill3} className=\"form-control\" />\n                            \n\n                        </div>\n\n                        <button className=\"btn btn-success mt-3\" type=\"submit\">Update Pet</button>\n                    </form>\n                    :\n                    <div>\n                        <h1>no pets</h1>\n                    </div>\n            }\n        </div>\n    );\n};\n\n\n\nexport default EditForm;","// import logo from './logo.svg';\nimport './App.css';\n\nimport React,{useState} from \"react\"\n\nimport AllPets from './components/AllPets';\nimport PetForm from './components/PetForm';\nimport PetDetails from './components/PetDetails';\nimport EditForm from './components/EditForm';\n\nimport {\n  BrowserRouter,\n  Switch, \n  Route, \n  Link, \n} from \"react-router-dom\"\n\nfunction App() {\n\n  const [formSubmitted, setFormSubmitted] =useState(false)\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      <Link to=\"/\" className=\" btn btn-primary\"> Home </Link>\n      <Link to=\"/new\" className=\" btn btn-success\"> Add a Pet to the Shelter </Link>\n         <Switch>\n           <Route exact path = \"/\"> \n\n          <hr />\n         <AllPets formSubmitted = {formSubmitted}/>\n           </Route>\n          <Route exact path = \"/new\">\n          <PetForm formSubmitted = {formSubmitted} setFormSubmitted = {setFormSubmitted} />\n          </Route>\n\n           <Route path = \"/pet/:id\">\n              <PetDetails></PetDetails>\n           </Route>\n\n           <Route exact path = \"/edit/:id\">\n              <EditForm></EditForm>\n           </Route>\n\n         </Switch>\n\n      </header>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}